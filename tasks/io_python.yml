#######################################################
# Tasks to configure the workflows
- name: RedHat | Download the workflows
  git: repo=https://github.com/OphidiaBigData/ophidia-workflow-catalogue.git dest=/home/{{ oph_user }}/ophidia-workflow-catalogue
  become: yes
  become_user: "{{ oph_user }}"

- name: RedHat | Copy template of ophidia script oph_script_configuration
  template:
    src=oph_script_configuration.j2
    dest=/usr/local/ophidia/oph-cluster/oph-analytics-framework/etc/oph_script_configuration
    mode=0644
    owner={{ oph_user }}
    group={{ oph_user }}

#######################################################
# Tasks to install UV-CDAT
- name: RedHat | Check if python is installed
  stat: path=/usr/local/ophidia/extra/bin/python3.5
  register: python_bin

- name: RedHat | Check if Anaconda is installed
  stat: path=/usr/local/ophidia/extra/anaconda3
  register: anaconda_dir

- name: RedHat | Check if cdo is installed
  stat: path=/usr/local/bin/cdo
  register: cdo_bin

- name: RedHat | Create extra folder for source code
  file: path=/usr/local/ophidia/extra/src state=directory mode=0755 owner={{ oph_user }} group={{ oph_user }}
  become: yes
  become_user: "{{ oph_user }}"
  when: python_bin.stat.exists == False or cdo_bin.stat.exists == False or anaconda_dir.stat.exists == False

- name: RedHat | Download Python
  get_url:
    url: https://www.python.org/ftp/python/3.5.0/Python-3.5.0.tgz
    dest: /usr/local/ophidia/extra/src/Python-3.5.0.tgz
    force_basic_auth: yes
    force: no
  become: yes
  become_user: "{{ oph_user }}"
  when: python_bin.stat.exists == False

- name: RedHat | Extract Python
  command: tar -xzf Python-3.5.0.tgz
  args:
    chdir: /usr/local/ophidia/extra/src 
    creates: /usr/local/ophidia/extra/src/Python-3.5.0
  become: yes
  become_user: "{{ oph_user }}"
  when: python_bin.stat.exists == False

- name: RedHat | Install Python
  shell:
    cd /usr/local/ophidia/extra/src/Python-3.5.0 && ./configure --prefix=/usr/local/ophidia/extra > /dev/null 2>&1 && make > /dev/null 2>&1 && make altinstall > /dev/null 2>&1
  args:
    executable: /bin/bash
    creates: /usr/local/ophidia/extra/bin/python3.5
  become: yes
  become_user: "{{ oph_user }}"
  when: python_bin.stat.exists == False

- name: RedHat | Download Anaconda
  get_url:
    url: http://repo.continuum.io/archive/Anaconda3-4.0.0-Linux-x86_64.sh
    dest: /usr/local/ophidia/extra/src/Anaconda3-4.0.0-Linux-x86_64.sh
    force_basic_auth: yes
    force: no
  become: yes
  become_user: "{{ oph_user }}"
  when: anaconda_dir.stat.exists == False

- name: RedHat | Make executable the Anaconda script
  file: path=/usr/local/ophidia/extra/src/Anaconda3-4.0.0-Linux-x86_64.sh mode=0755 owner={{ oph_user }} group={{ oph_user }}
  become: yes
  become_user: "{{ oph_user }}"
  when: anaconda_dir.stat.exists == False

- name: RedHat | Install Anaconda
  shell:
    ./Anaconda3-4.0.0-Linux-x86_64.sh -b -p /usr/local/ophidia/extra/anaconda3 > /dev/null 2>&1
  args:
    executable: /bin/bash
    chdir: /usr/local/ophidia/extra/src
    creates: /usr/local/ophidia/extra/anaconda3
  become: yes
  become_user: "{{ oph_user }}"
  environment:
    PATH: "/usr/local/ophidia/extra/bin:{{ ansible_env.PATH }}"
  when: anaconda_dir.stat.exists == False

- name: RedHat | Create ophidia-nox
  shell:
    conda create -y -n ophidia-nox -c uvcdat/label/nightly -c uvcdat uvcdat-nox hdf5=1.8.16 pyqt=4.11.3 jpeg=8
  args:
    executable: /bin/bash
    creates: /usr/local/ophidia/extra/anaconda3/envs/ophidia-nox
  become: yes
  become_user: "{{ oph_user }}"
  environment:
    PATH: "/usr/local/ophidia/extra/anaconda3/bin:{{ ansible_env.PATH }}"

- name: RedHat | Update PATH
  lineinfile:
    dest=/home/{{ oph_user }}/.bashrc
    regexp=''
    insertafter=EOF
    line='export PATH=/usr/local/ophidia/extra/anaconda3/bin:/usr/local/ophidia/extra/bin:$PATH\nexport UVCDAT_ANONYMOUS_LOG=no'
  become: yes
  become_user: "{{ oph_user }}"

- name: RedHat | Drop useless folder in Anaconda
  file: path=/usr/local/ophidia/extra/anaconda3/pkgs state=directory state=absent

#################################################
# Tasks to install CDO
- name: RedHat | Download CDO
  get_url:
    url: "https://code.zmaw.de/attachments/download/13175/cdo-current.tar.gz"
    dest: /usr/local/ophidia/extra/src/cdo-current.tar.gz
    force: no
    force_basic_auth: yes
    timeout: 1000
  become: yes
  become_user: "{{ oph_user }}"
  when: cdo_bin.stat.exists == False

- name: RedHat | Create CDO folder
  file: path=/usr/local/ophidia/extra/src/cdo state=directory mode=0755 owner={{ oph_user }} group={{ oph_user }}
  when: cdo_bin.stat.exists == False

- name: RedHat | Extract CDO
  command: tar -xzf cdo-current.tar.gz -C cdo --strip-components 1
  args:
    chdir: /usr/local/ophidia/extra/src 
    creates: /usr/local/ophidia/extra/src/cdo/*
  become: yes
  become_user: "{{ oph_user }}"
  when: cdo_bin.stat.exists == False

- name: RedHat | Build CDO
  shell:
    cd /usr/local/ophidia/extra/src/cdo && ./configure --with-netcdf=yes > /dev/null 2>&1 && make > /dev/null 2>&1
  args:
    executable: /bin/bash
    creates: /usr/local/ophidia/extra/src/cdo/src/cdo
  become: yes
  become_user: "{{ oph_user }}"
  when: cdo_bin.stat.exists == False

- name: RedHat | Install CDO
  shell:
    cd /usr/local/ophidia/extra/src/cdo && make install > /dev/null 2>&1
  args:
    executable: /bin/bash
    creates: /usr/local/bin/cdo
  when: cdo_bin.stat.exists == False

- name: RedHat | Drop folder source
  file: path=/usr/local/ophidia/extra/src state=directory state=absent
