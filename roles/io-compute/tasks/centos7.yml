---
#################################################
# Tasks to install additional repos
- name: RedHat | Install epel-elease
  yum: name=epel-release state=latest update_cache=yes

- name: RedHat | Install mysql-community-release
  yum: name=http://repo.mysql.com/mysql-community-release-el7-7.noarch.rpm state=present

- name: RedHat | get the indigo repository conf
  get_url: url={{ item.url }} dest={{ item.dest }}
  with_items:
    - { url: 'http://repo.indigo-datacloud.eu/repos/1/indigo1-testing.repo', dest: '/etc/yum.repos.d/indigo1-testing.repo' }

#################################################
# Tasks to install packages
- name: RedHat | Install necessary packages
  yum: name={{ item }} state=latest update_cache=yes
  with_items:
    - compat-guile18
    - curl
    - flex
    - gcc-c++
    - gsoap
    - gsl
    - guile
    - hdf5-mpich
    - jansson
    - libcurl
    - libssh2
    - libtool-ltdl
    - libxml2
    - mpich
    - mpich-autoload
    - mysql-community-devel
    - mysql-community-server
    - MySQL-python
    - munge
    - munge-libs
    - netcdf-mpich
    - openssl
    - sudo
    - wget
    - nfs-utils

- name: RedHat | 2nd set of packages slurm ophidia and libmatheval - the ones from the indigo repos
  yum: name={{ item }} state=latest update_cache=yes disable_gpg_check=yes
  with_items:
    - libmatheval
    - ophidia-analytics-framework
    - ophidia-primitives
    - slurm
    - slurm-munge
    - slurm-plugins

#################################################
# Tasks for configuration
- name: RedHat | Copy oph-primitives/lib to /usr/lib64/mysql/plugin
  shell: cp /usr/local/ophidia/oph-cluster/oph-primitives/lib/liboph_*.so /usr/lib64/mysql/plugin/
  args:
    executable: /bin/bash

- name: RedHat | Create user for Ophidia framwork
  user: name={{ oph_user }} shell=/bin/bash generate_ssh_key=yes ssh_key_bits=2048

- name: RedHat | ownership of Ophidia framework folders
  file: path=/usr/local/ophidia/oph-cluster/oph-analytics-framework owner={{ oph_user }} group={{ oph_user }} recurse=yes

- name: RedHat | sudo does not require tty
  lineinfile:
    dest=/etc/sudoers
    state=present
    regexp=^requiretty
    line='Defaults    !requiretty'

- name: RedHat | Copy template of slurm.conf
  template:
    src=slurm.conf.j2
    dest=/etc/slurm/slurm.conf
    mode=0644
    owner=root
    group=root

- name: RedHat | ownership of /etc/munge
  file: path=/etc/munge owner=munge group=root

- name: RedHat | Make munge private key
  shell: dd if=/dev/urandom bs=1 count=1024 > /etc/munge/munge.key

- name: RedHat | Set permissions on /etc/munge/munge.key
  file: path=/etc/munge/munge.key mode=400 owner=munge group=root

#######################################################
# Tasks to setup/config mysql and necessary databases
- name: RedHat | ownership mysql for /var/log/mysqld.log
  file: path=/var/log/mysqld.log owner=mysql group=root

- name: RedHat | mysql prepare system tables
  command: /usr/bin/mysql-systemd-start pre
  become: true
  become_user: mysql

- name: RedHat | Start mysql_safe
  shell: /usr/bin/mysqld_safe --user=mysql 2>&1 > /dev/null &
  args:
    executable: /bin/bash

- name: RedHat | Wait for mysql start
  shell: sleep 10
  args:
    executable: /bin/bash

- name: RedHat | Set mysql root passwd
  command: /usr/bin/mysqladmin -u root password '{{ cert_passwd }}'

- name: RedHat | Copy template of .my.cnf to oph_user
  template:
    src=.my.cnf.j2
    dest=/home/{{ oph_user }}/.my.cnf
    mode=0600
    owner={{ oph_user }}
    group={{ oph_user }}

- name: RedHat | Copy template of .my.cnf to root
  template:
    src=.my.cnf.j2
    dest=/root/.my.cnf
    mode=0600
    owner=root
    group=root

- name: RedHat | import primitives
  mysql_db: name=mysql state=import target=/usr/local/ophidia/oph-cluster/oph-primitives/etc/create_func.sql

#######################################################
# Tasks to start the services
- name: RedHat | start munged
  command: /usr/sbin/munged
  become: true
  become_user: munge

- name: RedHat | start slurmd
  command: /usr/sbin/slurmd

- name: RedHat | start sshd
  command: /usr/sbin/sshd

#######################################################
# Tasks to install UV-CDAT
- name: RedHat | Create extra folder for Python
  file: path=/usr/local/ophidia/extra/src state=directory mode=0755 owner={{ oph_user }} group={{ oph_user }}
  become: yes
  become_user: "{{ oph_user }}"

- name: RedHat | Download Python
  get_url:
    url: https://www.python.org/ftp/python/3.5.0/Python-3.5.0.tgz
    dest: /usr/local/ophidia/extra/src
    force_basic_auth: yes
  become: yes
  become_user: "{{ oph_user }}"

- name: RedHat | Extract Python
  unarchive: src=/usr/local/ophidia/extra/src/Python-3.5.0.tgz dest=/usr/local/ophidia/extra/src
  become: yes
  become_user: "{{ oph_user }}"

- name: RedHat | Install Python
  shell:
    cd /usr/local/ophidia/extra/src/Python-3.5.0 && ./configure --prefix=/usr/local/ophidia/extra > /dev/null 2>&1 && make > /dev/null 2>&1 && make altinstall > /dev/null 2>&1
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ oph_user }}"

- name: RedHat | Download Anaconda
  get_url:
    url: http://repo.continuum.io/archive/Anaconda3-4.0.0-Linux-x86_64.sh
    dest: /usr/local/ophidia/extra/src
    force_basic_auth: yes
  become: yes
  become_user: "{{ oph_user }}"

- name: RedHat | Make executable the Anaconda script
  file: path=/usr/local/ophidia/extra/src/Anaconda3-4.0.0-Linux-x86_64.sh mode=0755 owner={{ oph_user }} group={{ oph_user }}
  become: yes
  become_user: "{{ oph_user }}"

- name: RedHat | Install Anaconda
  shell:
    ./Anaconda3-4.0.0-Linux-x86_64.sh -b -p /usr/local/ophidia/extra/anaconda3 > /dev/null 2>&1
  args:
    executable: /bin/bash
    chdir: /usr/local/ophidia/extra/src
  become: yes
  become_user: "{{ oph_user }}"
  environment:
    PATH: "/usr/local/ophidia/extra/bin:{{ ansible_env.PATH }}"

- name: RedHat | Create ophidia-nox
  shell:
    conda create -y -n ophidia-nox -c uvcdat/label/nightly -c uvcdat uvcdat-nox
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ oph_user }}"
  environment:
    PATH: "/usr/local/ophidia/extra/anaconda3/bin:{{ ansible_env.PATH }}"

- name: RedHat | Update PATH
  lineinfile:
    dest=/home/{{ oph_user }}/.bashrc
    regexp=''
    insertafter=EOF
    line='export PATH=/usr/local/ophidia/extra/anaconda3/bin:/usr/local/ophidia/extra/bin:$PATH'
  become: yes
  become_user: "{{ oph_user }}"

#######################################################
# Tasks to configure the workflows
- name: RedHat | Download the workflows
  git: repo=https://github.com/OphidiaBigData/ophidia-workflow-catalogue.git dest=/home/{{ oph_user }}/ophidia-workflow-catalogue
  become: yes
  become_user: "{{ oph_user }}"

- name: RedHat | Copy template of ophidia script oph_script_configuration
  template:
    src=oph_script_configuration.j2
    dest=/usr/local/ophidia/oph-cluster/oph-analytics-framework/etc/oph_script_configuration
    mode=0644
    owner={{ oph_user }}
    group={{ oph_user }}

