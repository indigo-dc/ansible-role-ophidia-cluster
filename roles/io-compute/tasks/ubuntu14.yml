---
#################################################
# Tasks to install additional repos
- name: Debian | get the indigo repository conf
  get_url: url={{ item.url }} dest={{ item.dest }}
  with_items:
    - { url: 'http://repo.indigo-datacloud.eu/repos/1/indigo1-testing-ubuntu14_04.list', dest: '/etc/apt/sources.list.d/indigo1-testing-ubuntu14_04.list' }

#################################################
# Tasks to install packages
- name: Debian | Install necessary packages
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - guile-1.8-dev
    - curl
    - libcurl3
    - libcurl4-openssl-dev
    - fonts-dejavu
    - flex
    - gcc
    - git
    - graphviz-dev
    - gsoap
    - libgsl0-dev
    - libgtk2.0-dev
    - apache2-bin
    - indent
    - lcov
    - bison
    - libcurl3
    - libssh2-1-dev
    - libtool
    - libltdl-dev
    - libxml2
    - libxml2-dev
    - mpich
    - libmpich2-dev
    - libmysqlclient-dev
    - mysql-client-5.6
    - munge
    - libmunge-dev
    - libmunge2
    - openssl
    - libssl-dev
    - php5
    - libapache2-mod-php5
    - python-pip
    - rrdtool
    - sudo
    - wget
    - libjansson-dev
    - libreadline-dev
    - autotools-dev
    - autoconf
    - slurm-llnl

- name: Debian | Install MySQL Server
  shell: DEBIAN_FRONTEND="noninteractive" apt-get install -y mysql-server-5.6
  args:
    executable: /bin/bash

- name: Debian | Install gcovr
  shell: pip install gcovr
  args:
    executable: /bin/bash

#################################################
# Tasks to install additional packages
- name: Debian | Create source directory
  file: path=/usr/local/ophidia/extra/src state=directory mode=0755

- name: Debian | Download Matheval
  get_url:
    url: http://ftp.gnu.org/gnu/libmatheval/libmatheval-1.1.11.tar.gz
    dest: /usr/local/ophidia/extra/src
    force_basic_auth: yes

- name: Debian | Extract MathEval
  unarchive: src=/usr/local/ophidia/extra/src/libmatheval-1.1.11.tar.gz dest=/usr/local/ophidia/extra/src

- name: Debian | Install MathEval
  shell:
    cd /usr/local/ophidia/extra/src/libmatheval-1.1.11 && ./configure --prefix=/usr/local/ophidia/extra --enable-parallel && make && make install
  args:
    executable: /bin/bash

- name: Debian | Download HDF5
  get_url:
    url: http://www.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.8.17.tar.gz
    dest: /usr/local/ophidia/extra/src
    force_basic_auth: yes

- name: Debian | Extract HDF5
  unarchive: src=/usr/local/ophidia/extra/src/hdf5-1.8.17.tar.gz dest=/usr/local/ophidia/extra/src

- name: Debian | Install HDF5
  shell:
    cd /usr/local/ophidia/extra/src/hdf5-1.8.17 && ./configure --prefix=/usr/local/ophidia/extra --enable-parallel && make && make install
  args:
    executable: /bin/bash

- name: Debian | Download NetCDF
  get_url:
    url: ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.0.tar.gz
    dest: /usr/local/ophidia/extra/src
    force_basic_auth: yes

- name: Debian | Extract NetCDF
  unarchive: src=/usr/local/ophidia/extra/src/netcdf-4.4.0.tar.gz dest=/usr/local/ophidia/extra/src

- name: Debian | Install NetCDF
  shell:
    cd /usr/local/ophidia/extra/src/netcdf-4.4.0 && ./configure --prefix=/usr/local/ophidia/extra --enable-parallel-tests && make && make install
  args:
    executable: /bin/bash

#################################################
# Tasks to install Ophidia modules
- name: Debian | Ophidia packages - from the indigo repos
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - ophidia-analytics-framework
    - ophidia-primitives
    - ophidia-server
    - ophidia-terminal

#################################################
# Tasks for configuration
- name: Debian | Copy oph-primitives/lib to /usr/lib64/mysql/plugin
  shell: cp /usr/local/ophidia/oph-cluster/oph-primitives/lib/liboph_*.so /usr/lib64/mysql/plugin/
  args:
    executable: /bin/bash

- name: Debian | Create user for Ophidia framwork
  user: name={{ oph_user }} shell=/bin/bash generate_ssh_key=yes ssh_key_bits=2048

- name: Debian | sudo does not require tty
  shell: sed -i 's/requiretty/!requiretty/g' /etc/sudoers

- name: Debian | Copy template of ophidia server server.conf
  template:
    src=server.conf.j2
    dest=/usr/local/ophidia/oph-server/etc/server.conf
    mode=0644
    owner=root
    group=root

- name: Debian | Copy template of slurm.conf
  template:
    src=slurm.conf.j2
    dest=/etc/slurm/slurm.conf
    mode=0644
    owner=root
    group=root

- name: Debian | ownership of /etc/munge
  file: path=/etc/munge owner=munge group=root

- name: Debian | Make munge private key
  shell: dd if=/dev/urandom bs=1 count=1024 > /etc/munge/munge.key

- name: Debian | Set permissions on /etc/munge/munge.key
  file: path=/etc/munge/munge.key mode=400 owner=munge group=root

- name: Debian | Creating root SSL cert
  command: >
    openssl req
      -newkey rsa:1024
      -passout pass:{{ cert_passwd }}
      -subj "/"
      -sha1
      -keyout rootkey.pem
      -out rootreq.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/

- name: Debian | Sign root SSL cert
  command: >
    openssl x509
      -req
      -in rootreq.pem
      -passin pass:{{ cert_passwd }}
      -sha1
      -extensions v3_ca
      -signkey rootkey.pem
      -out rootcert.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/

- name: Debian | merge cert and key of root cert
  shell: cat rootcert.pem rootkey.pem > cacert.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/
    executable: /bin/bash

- name: Debian | Creating server SSL cert
  command: >
    openssl req
      -newkey rsa:1024
      -passout pass:{{ cert_passwd }}
      -subj "/"
      -sha1
      -keyout serverkey.pem
      -out serverreq.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/

- name: Debian | Sign server SSL cert
  command: >
    openssl x509
      -req
      -in serverreq.pem
      -passin pass:{{ cert_passwd }}
      -sha1
      -extensions usr_cert
      -CA cacert.pem
      -CAkey cacert.pem
      -CAcreateserial
      -out servercert.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/

- name: Debian | merge cert and key of server cert
  shell: cat servercert.pem serverkey.pem rootcert.pem > myserver.pem
  args:
    chdir: /usr/local/ophidia/oph-server/etc/cert/
    executable: /bin/bash

- name: Debian | Remove intermediate certs
  file: path={{ item }} state=absent
  with_items:
    - /usr/local/ophidia/oph-server/etc/cert/rootcert.pem
    - /usr/local/ophidia/oph-server/etc/cert/rootkey.pem
    - /usr/local/ophidia/oph-server/etc/cert/rootreq.pem
    - /usr/local/ophidia/oph-server/etc/cert/servercert.pem
    - /usr/local/ophidia/oph-server/etc/cert/serverkey.pem
    - /usr/local/ophidia/oph-server/etc/cert/serverreq.pem
    - /usr/local/ophidia/oph-server/etc/cert/cacert.srl

#######################################################
# Tasks to setup/config mysql and necessary databases

# TODO: for now the service will have to be started manually
# will have to figure out the problems of centos7 systemd
- name: Debian | ownership mysql for /var/log/mysqld.log
  file: path=/var/log/mysqld.log owner=mysql group=root

- name: Debian | mysql prepare system tables
  command: /usr/bin/mysql-systemd-start pre
  become: true
  become_user: mysql

- name: Debian | Start mysql_safe
  shell: /usr/bin/mysqld_safe --user=mysql 2>&1 > /dev/null &
  args:
    executable: /bin/bash

- name: Debian | Wait for mysql start
  shell: sleep 10
  args:
    executable: /bin/bash

####
# This task is the correct way to set the mysql roo passwd but not working properly
# will have to check the problem
#
#- name: Debian | set the mysql root user passwd
#  mysql_user: name=root password={{ cert_passwd }}

# this task is temporary: set explicitely the mysql root passwd
- name: Debian | Set mysql root passwd
  command: /usr/bin/mysqladmin -u root password '{{ cert_passwd }}'

- name: Debian | Copy template of .my.cnf to oph_user
  template:
    src=.my.cnf.j2
    dest=/home/{{ oph_user }}/.my.cnf
    mode=0600
    owner={{ oph_user }}
    group={{ oph_user }}

- name: Debian | Copy template of .my.cnf to root
  template:
    src=.my.cnf.j2
    dest=/root/.my.cnf
    mode=0600
    owner=root
    group=root

- name: Debian | create ophidia databases
  mysql_db: name={{ item }} state=present
  with_items:
    - ophidiadb
    - oph_dimensions

- name: Debian | import ophidia analytics db
  mysql_db: name=ophidiadb state=import target=/usr/local/ophidia/oph-cluster/oph-analytics-framework/etc/ophidiadb.sql

- name: Debian | Copy template of .my.cnf to root
  template:
    src=ophdb-host.sql.j2
    dest=/tmp/ophdb-host.sql
    mode=0600
    owner=root
    group=root

- name: Debian | import ophdb-host.sql
  mysql_db: name=ophidiadb state=import target=/tmp/ophdb-host.sql

- name: Debian | import primitives
  mysql_db: name=mysql state=import target=/usr/local/ophidia/oph-cluster/oph-primitives/etc/create_func.sql

#######################################################
# Tasks to start the services
- name: Debian | start munged
  command: /usr/sbin/munged
  become: true
  become_user: munge

- name: Debian | start slurmd
  command: /usr/sbin/slurmd

- name: Debian | start slurmctld
  command: /usr/sbin/slurmctld

- name: Debian | start httpd
  command: /usr/sbin/httpd

- name: Debian | start sshd
  command: /usr/sbin/sshd

#######################################################
# Tasks to generate DSA keys for oph_user
- name: Debian | key generation
  shell: ssh-keygen -t dsa -f /home/{{ oph_user }}/.ssh/id_dsa -N ""
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ oph_user }}"

- name: Debian | Copy the key to authorized_keys file
  shell: cat id_dsa.pub >> authorized_keys
  args:
    chdir: /home/{{ oph_user }}/.ssh
    executable: /bin/bash
  become: yes
  become_user: "{{ oph_user }}"

- name: Debian | Set permissions on authorized_keys
  file: path=/home/{{ oph_user }}/.ssh/authorized_keys mode=600 owner={{ oph_user }} group={{ oph_user }}
  become: yes
  become_user: "{{ oph_user }}"

- name: Debian | Remove nologin
  file: path=/run/nologin state=absent

#######################################################
# Tasks to set permissions
- name: Debian | Set permissions on Ophidia folders
  shell: chown -R {{ oph_user }}:{{ oph_user }} /usr/local/ophidia
  args:
    executable: /bin/bash

- name: Debian | Set permissions on Ophidia web space
  shell: chown -R {{ oph_user }}:{{ oph_user }} /var/www/html/ophidia
  args:
    executable: /bin/bash

#######################################################
# Task to start Ophidia service
- name: Debian | Start ophidia server
  shell: oph_server -d 2>&1 > /dev/null &
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ oph_user }}"

